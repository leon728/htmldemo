/*!

# GaijiWeb Server Javascript Plugin
+ Version: 3.0.0.16
+ Copyright Â© 2011 [DynaComware](http://www.dynacw.com/). All rights reserved.
+ Date: *Tue Apr 16 2013 08:30:00 GMT+0800 (Central Standard Time)*

****************************************************************************************************/

(function(a, b){
	var d=function(){
		var d=function(){
			return new d.fn.init();
		}
		d.fn=d.prototype={
			constructor: d, 
			name: 'Gaiji Web Server',
			version: '3.0.0.18',
			build: '001',
			init: function(){
				return this;
			}
		}, 
		d.fn.init.prototype=d.fn;
		var class2type={},
		core_hasOwn=class2type.hasOwnProperty;
		d.extend=d.fn.extend=function(){
			var options, name, src, copy, copyIsArray, clone,
				target=arguments[0] || {},
				i=1,
				length=arguments.length,
				deep=false;
			if(typeof target === 'boolean'){
				deep=target;
				target=arguments[1] || {};
				i=2;
			}
			if(typeof target !== 'object' && !d.IsFunction(target)){
				target={};
			}
			if(length === i){
				target=this;
				--i;
			}
			for(; i < length; i++){
				if((options=arguments[ i ]) != null){
					for(name in options){
						if(typeof(options.hasOwnProperty) == 'undefined' || !options.hasOwnProperty(name)) continue;
						src=target[name];
						copy=options[name];
						if(target === copy){
							continue;
						}
						if(deep && copy && (d.IsPlainObject(copy) || (copyIsArray=d.IsArray(copy)))){
							if(copyIsArray){
								copyIsArray=false;
								clone=src && d.IsArray(src) ? src : [];
							} else{
								clone=src && d.IsPlainObject(src) ? src : {};
							}
							target[name]=d.extend(deep, clone, copy);
						} else if(copy !== undefined) {
							target[ name ]=copy;
						}
					}
				}
			}
			return target;
		}
		d.extend({
			IsFunction: function(obj){
				return d.Type(obj) === 'function';
			},
			IsPlainObject: function(obj){
				if(d.Type(obj) !== 'object' || obj.nodeType || d.IsWindow(obj)){
					return false;
				}
				try{
					if(obj.constructor && !core_hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')){
						return false;
					}
				} catch(e){
					return false;
				}
				return true;
			},
			IsWindow: function(obj){
				return obj != null && obj === obj.window;
			},
			IsArray:  Array.IsArray || function(obj){ return d.Type(obj) === 'array'},
			Type: function(obj){
				if(obj == null){
					return String(obj);
				}
				return typeof obj === 'object' || typeof obj === 'function' ? 'object' : typeof obj;
			}
		})
		return d;
	}();
	a.dynaGWS=d;
	// Warning: This function has been DEPRECATED. Relying on this feature is highly discouraged.
	a.DynaGWS=d;	
	a.dynaWFS=d;
	a.DynaWFS=d;
	return this;
})(window);